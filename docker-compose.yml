version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - task_network

  app:
    build: .
    ports:
      - "${APP_PORT_HOST}:${APP_PORT}"
    environment:
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: ${ALGORITHM}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
      DEBUG: ${DEBUG}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        while ! nc -z db 5432; do
          sleep 1
        done &&
        echo 'Database is ready!' &&
        alembic upgrade head &&
        uvicorn app.main:app --host ${APP_HOST} --port ${APP_PORT} --reload
      "
    networks:
      - task_network

volumes:
  postgres_data:

networks:
  task_network:
    driver: bridge
    name: task_management_network
